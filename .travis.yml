sudo: required
language: cpp
dist: trusty

addons: 
  apt: 
    sources:
      - ubuntu-toolchain-r-test
matrix: 
  include: 
    - env: COMPILER=gcc         COMPILER_VER=5      QT_BASE=57 BUILD_TYPE=Debug
    - env: COMPILER=gcc         COMPILER_VER=5      QT_BASE=57 BUILD_TYPE=Release
    - env: COMPILER=gcc         COMPILER_VER=6      QT_BASE=57 BUILD_TYPE=Debug
    - env: COMPILER=gcc         COMPILER_VER=6      QT_BASE=57 BUILD_TYPE=Release
    - env: COMPILER=clang         COMPILER_VER=3.8      QT_BASE=57 BUILD_TYPE=Debug
    - env: COMPILER=clang         COMPILER_VER=3.8      QT_BASE=57 BUILD_TYPE=Release

before_install:
  - 'sudo add-apt-repository ppa:beineri/opt-qt57-trusty -y'
  - sudo apt-get update

install: 
  - sudo apt-get install qt57base qt57script qt57declarative qt57tools qt57x11extras qt57svg ninja-build libxcb-keysyms1-dev libxml2-utils clang-3.8 gcc-5 gcc-6 g++-5 g++-6 build-essential python3-pip
  - source /opt/qt57/bin/qt57-env.sh
  - ./scripts/build_frameworks.sh $BUILD_TYPE Ninja
  - sudo pip install conan

script:
  - mkdir build
  - cd build
  - conan install .. -s compiler="$COMPILER" -s compiler.libcxx="libstdc++11" -s compiler.version=$COMPILER_VER --build clang --build llvm --build libexecstream --build compiler-rt --build libcxx -o build_type=$BUILD_TYPE 
  - cmake .. -DCMAKE_CXX_COMPILER=$CXX_COMPILER -DCMAKE_C_COMPILER=$C_COMPILER
  - make -j`nproc`
  - make test

deploy:
  skip_cleanup: true
  provider: releases
  api_key:
    secure: YihGytt5BxAEKxSuj9SqcMbMSOBMQpdsmQBNsOQnx0PopxFj73q+Nx9AMqC06TdXerK22D+PXubxCKjqtjf1OCeVaG5X+WGsaMBVt02isMpcQjxRzvTORpIQ+AsTFAq2eFALfVSFHqjwiom2esCcm/2hPN4i5v1wti9OSL11tjAD/gyfthK3NDEgY/ccb+69C3sdJu0QcSTSwEjAWOIsP2KSFsMDghyVUia07+tVtisaF6NR6mClCXkeSI5zTlAt7Nd8LzUGvhUWs+TKf4UIdLKgEH2NtwQjR9chkNsT6xMpfErz6Wx7Uawb377ASYA9w7b3gW/Xqo/mDClPc5Y0DKQhKzp1EZesrpNambI/O7Sr/b7tbJm4Bu3W0wfpfwyrxSYjUOTST1Gu0OjszT33yWymSzLu1v32Na4DRo8YR6hmH0SjBBPwbRt5AQQSdiMbfHdpUHkNOyqLqlE/YTJkvzHKoY4TUSqMR1xVUZBFdFXmAgoXzR3SxZ0k2rGyWZ9Y5xNBD5ZSQ0R/cY7KKQ2Ctv0e9bW2Z5L5kNXkUeRiZa/MKoydNqVeOjkiV2fRb2HEOBS2s8FPk8tAFFyp+fCh6h2gCQhM5X22wSmQVk08IqogmD9bh6MM/zqNkJ2FTCJMpR0LpctbalVo2cFZgh1cbSM0YMg7y5xIV9ToyK2asrA=
  file: Chigraph-x86_64-$(git describe --tags --always).AppImage
  on:
    repo: russelltg/chigraph
